#welcome to quill.py, an open source basic text editor that serves as an alternative to microsoft's "notepad" or apple's "TextEdit"
#Disclaimer, this program was created in part by following a tutorial posted by pymike00 on youtube, credit for the basic outline of this program goes to him and his PyText Editor!
import tkinter as tk
from tkinter import filedialog
class Menubar:
    def __init__(self,parent):
        font_specs = ("Monoid", 8)
        menubar = tk.Menu(parent.master, font=font_specs)
        parent.master.config(menu=menubar)
        #This section of code creates all the options for our first menubar:
        file_dropdown = tk.Menu(menubar, font=font_specs,tearoff=0,bg="#272727",fg="#ffffff",relief="flat")
        file_dropdown.add_command(label="Clear Text", command=parent.clear_window)
        file_dropdown.add_command(label="Open File", command=parent.open_file)
        file_dropdown.add_command(label="Save", command=parent.save)
        file_dropdown.add_command(label="Save File As", command=parent.save_as)
        file_dropdown.add_separator()
        file_dropdown.add_command(label="Exit Program", command=parent.master.destroy)

        menubar.add_cascade(label="File", menu=file_dropdown)
        menubar.add_cascade(label="About", command=parent.about_window)
#This craetes the text box and our window:
class PyText:
    def __init__(self, master):
        #This section of code creates our window and sizes it at startup:
        master.title("Untitled - Quill")
        master.geometry("1200x700") 
        font_specs = ("Monoid", 8)
        
        self.master = master
        self.filename = None

        self.textarea = tk.Text(master,bg="#272727",fg="#ffffff", font=font_specs)
        self.scroll = tk.Scrollbar(master,command=self.textarea.yview)
        self.textarea.configure(yscrollcommand=self.scroll.set)
        self.textarea.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
        self.scroll.pack(side=tk.RIGHT, fill=tk.Y)

        self.menubar = Menubar(self)
    
    def set_window_title(self, name=None):
        if name:
            self.master.title(name + " - Quill")
        else:
            self.master.title("Untitled - Quill")


    def clear_window(self):
        self.textarea.delete(1.0, tk.END)
        self.filename = None
        self.set_window_title()

    def open_file(self):
        self.filename = filedialog.askopenfilename(defaultextension=".txt", filetypes=[("All Files", "*.*"),("Text Files", "*.txt"),("Python Scripts", "*.py"),("Markdown Documents", "*.md"),("JavaScript Files", "*.js"),("HTML Document", "*.html"),("CSS Documents", "*.css")])
        if self.filename:
            self.textarea.delete(1.0, tk.END)
            with open(self.filename, "r") as f:
                self.textarea.insert(1.0, f.read())
            self.set_window_title(self.filename)
    
    def save(self):
        if self.filename:
            try:
                textarea_content = self.textarea.get(1.0,tk.END)
                with open(self.filename,"w") as f:
                    f.write(textarea_content)
            except Exception as e:
                print(e)
        else:
            self.save_as()

    def save_as(self):
        try:
            new_file = filedialog.asksaveasfilename(initialfile="Unitiled.txt", defaultextension=".txt", filetypes=[("All Files", "*.*"),("Text Files", "*.txt"),("Python Scripts", "*.py"),("Markdown Documents", "*.md"),("JavaScript Files", "*.js"),("HTML Document", "*.html"),("CSS Documents", "*.css")])
            textarea_content = self.textarea.get(1.0,tk.END)
            with open(new_file, "w") as f:
                f.write(textarea_content)
            self.filename = new_file
            self.set_window_title(self.filename)
        except Exception as e:
            print(e)
    #This function creates a command that fires to open an about image:
    def about_window(self):
        font_specs = ("Monoid", 8) #This line of code creates a variable with the paremeters for the fonts to be used in the window.
        #This section of code creates and names the "about" window:
        top = tk.Toplevel(bg="#272727")
        top.title("About")
        #This section of code imports and creates the logo, then packs it into the inow
        #This is the GIF that contains the logo encoded into Base64 so that it can be used in the program
        photoBase64 = """R0lGODlhdQI7AfcAAB0dHSIiIh8fHyYmJl1dXRwcHD09Penp6SQkJBsbGx4eHiEhIU1NTSAgIHh4eCUlJa6uriMjIxoaGpOTk/n5+cnJyRgYGCgoKOzs7C0tLf7+/vz8/F5eXhkZGXJycrGxsSwsLNnZ2S4uLrS0tODg4C8vLykpKTAwMO3t7TExMTs7OyoqKrCwsOrq6ujo6D4+Pjw8PDY2Nn9/f0lJSbi4uOXl5WRkZEtLS0JCQjIyMisrK9jY2JCQkNra2t/f39PT03d3d05OTkVFRVBQUMvLy+Pj456ensjIyG1tbb29vTc3NzMzM/r6+kxMTObm5kREROHh4YKCgrq6uv39/TU1NeLi4vHx8dzc3MXFxa2trefn58HBwbm5uYqKik9PT0pKSlRUVEZGRjQ0NLy8vPv7+/b29j8/P6ysrLe3t/j4+MfHx5+fn8PDw+vr60hISDo6OrOzs7u7u1tbW9vb22BgYN3d3YuLi4+Pj/Pz8+Tk5ENDQ3R0dGFhYTg4OGVlZWNjY1VVVd7e3vDw8PLy8lJSUsDAwM7OzvT09L6+vqioqHl5ebW1tZSUlH19fTk5OcbGxsLCwnBwcM3NzcrKyu/v77KysszMzLa2ttbW1tXV1Xx8fGJiYqCgoFhYWEFBQRcXF0BAQHt7e42NjZ2dnff393Z2dsTExEdHR4mJiVFRUZeXl3p6etHR0WdnZxYWFlNTU9fX14aGhl9fXxMTE6SkpO7u7llZWXV1dVZWVqOjo5KSkhUVFZGRkZubm1paWm9vb5qamm5ubr+/v3Nzc9LS0q+vr4eHh4WFhYyMjGlpaY6OjhISEoSEhNDQ0GpqapmZmaGhoZaWlmxsbJWVlWZmZs/Pz6amptTU1FdXV4GBgaurq1xcXH5+fnFxcYiIiPX19aenp5ycnKqqqqmpqZiYmKWlpYCAgIODg2traxQUFKKiog4ODhEREWhoaBAQEAoKCv///ycnJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C1hNUCBEYXRhWE1QPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxNDIgNzkuMTYwOTI0LCAyMDE3LzA3LzEzLTAxOjA2OjM5ICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9
        Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgKFdpbmRvd3MpIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkI4RkQ4OUU1QzQ5NTExRUFCMzVCQjRGQUExOEUxMkZBIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkI4RkQ4OUU2QzQ5NTExRUFCMzVCQjRGQUExOEUxMkZBIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6QjhGRDg5RTNDNDk1MTFFQUIzNUJCNEZBQTE4RTEyRkEiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6QjhGRDg5RTRDNDk1MTFFQUIzNUJCNEZBQTE4RTEyRkEiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz4B//79/Pv6+fj39vX08/Lx8O/u7ezr6uno5+bl5OPi4eDf3t3c29rZ2NfW1dTT0tHQz87NzMvKycjHxsXEw8LBwL++vby7urm4t7a1tLOysbCvrq2sq6qpqKempaSjoqGgn56dnJuamZiXlpWUk5KRkI+OjYyLiomIh4aFhIOCgYB/fn18e3p5eHd2dXRzcnFwb25tbGtqaWhnZmVkY2JhYF9eXVxbWllYV1ZVVFNSUVBPTk1MS0pJSEdGRURDQkFAPz49PDs6OTg3NjU0MzIxMC8uLSwrKikoJyYlJCMiISAfHh0cGxoZGBcWFRQTEhEQDw4NDAsKCQgHBgUEAwIBAAAh+QQAAAAAACwAAAAAdQI7AQAI/wDjCRxIsKDBgwgTKlzIsKHDhxAjSpxIsaLF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 """
        photo = tk.PhotoImage(data=photoBase64)
        
        logo = tk.Label(top,image=photo,borderwidth=0)
        logo.image = photo
        logo.pack()
        #This section of code prints text to inform the user about the program:
        about_text = "This is Quill: Version 0.1"
        text = tk.Label(top,text=about_text,font=font_specs,bg="#272727",fg='#ffffff')
        text.pack()
if __name__ == "__main__":
    master = tk.Tk()
    pt = PyText(master)
    master.mainloop()